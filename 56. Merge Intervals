
class Solution {
    public int[][] merge(int[][] intervals) {
        if(intervals.length <= 1) return intervals;
        List<int[]> res = new ArrayList<>();
        Arrays.sort(intervals, (a, b) -> (a[0] - b[0])); // by starting time
       // Arrays.sort(intervals, (a,b)->Integer.compare(a[0], b[0]));
        int[] newInterval = intervals[0];
        res.add(newInterval);
        
        for(int[] interval : intervals) {
            if(newInterval[1] >= interval[0])
                newInterval[1] = Math.max(newInterval[1], interval[1]);
            else {
                newInterval = interval;
                res.add(newInterval);
            }
        }
        return res.toArray(new int[res.size()][]);
    }
}


// time: O(nlogn)
// space:O(n)
